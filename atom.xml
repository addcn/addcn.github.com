<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[uedao]]></title>
  <link href="http://addcn.github.com/atom.xml" rel="self"/>
  <link href="http://addcn.github.com/"/>
  <updated>2013-06-05T10:18:02+08:00</updated>
  <id>http://addcn.github.com/</id>
  <author>
    <name><![CDATA[addcn]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[无信用卡注册google play方法]]></title>
    <link href="http://addcn.github.com/blog/2013/06/04/no-credit-card-register-google-play/"/>
    <updated>2013-06-04T18:30:00+08:00</updated>
    <id>http://addcn.github.com/blog/2013/06/04/no-credit-card-register-google-play</id>
    <content type="html"><![CDATA[<p>注册google play账户其实很简单，但因为中国大陆特殊关系及很多人没有信用卡，就变得不那么容易了。</p>

<p>简单说下亲测注册成功google play的方法，主要是不用开通实体信用卡且不用等待——实时开通。</p>

<p><strong>1、注册<a href="https://www.tenpay.com/v2/">财付通</a></strong></p>

<p>请先充值注册的费用US$25.00。我注册完成后，加手续费等全部扣费￥161.61元人民币。</p>

<p><strong>2、财付通实名认证</strong></p>

<p>开通境外支付必须先通过实名认证，按照操作就可以。</p>

<p><strong>3、开通<a href="https://www.tenpay.com/v2/account/interna/index.shtml">境外支付</a></strong></p>

<p>是否选择“转运地址提供商”，如果你不清楚这是什么？建议跟我一样，把“友家速递”和“4PX”都选择，确认开通后会虚拟一个信用卡账号码，包括信用卡境外地址、邮政编码、联系电话等。</p>

<p><strong>4、登录<a href="http://www.google.com/wallet/">google电子钱包</a>，绑定虚拟信用卡</strong></p>

<p>点右上角的get started按钮登录，然后添加信用卡。把步骤3虚拟出来的信用卡信息填写上去就可以。需要注意的是，“帐单信息”里面的地址、邮编等需要跟财付通虚拟的信用卡资料一致，否则会短信你“账单地址邮编验证失败”而授权失败。</p>

<p><strong>5、注册<a href="https://play.google.com/apps/publish/">google pay</a></strong></p>

<p>填写完资料确认支付，直接转跳到google play控制台成功了。</p>

<p><strong>最后，有图有真相</strong></p>

<p><img src="http://addcn.github.com/download/images/google-play.png" alt="google play register" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android異步線程使用總結]]></title>
    <link href="http://addcn.github.com/blog/2013/04/19/android-sync-thread/"/>
    <updated>2013-04-19T10:08:00+08:00</updated>
    <id>http://addcn.github.com/blog/2013/04/19/android-sync-thread</id>
    <content type="html"><![CDATA[<h2>new Thread</h2>

<p><strong>MainThread button onClick</strong></p>

<pre class="terminal"><code>

new Thread(new Runnable() {
        @Override
        public void run() {
                //休眠3秒，用于模拟网络操作时间
                try {
                    Thread.sleep(3000);
                } catch (InterruptedException e) {
                    e.printStackTrace();
                }                        
                //do something
                Message mes=handler.obtainMessage("sync");
                handler.sendMessage(mes);
        }
}).start();


</code></pre>


<p><strong>操作返回</strong></p>

<pre class="terminal"><code>

private Handler handler=new Handler(){
        @Override
        public void handleMessage(Message msg) {
                switch (msg.what) {
                        case "sync":                        
                                //隐藏进度条
                                loadProgressBar.setVisibility(View.GONE);
                                break;
                        default:
                                break;
                }
                super.handleMessage(msg);
        }
};

</code></pre>


<h2>AsyncTask</h2>

<p><strong>onCreant</strong></p>

<pre class="terminal"><code>

new DetailTask().execute(mHouse); // 加載詳細


</code></pre>


<p><strong>操作返回</strong></p>

<pre class="terminal"><code>


/**
 * 詳細任務
 * 
 */
public class DetailTask extends AsyncTask<House, Integer, String> 
{
        @Override
        protected String doInBackground(House... params) {
                // 任務執行
                House houseTmp = params[0];
                String houseCode = houseTmp.getHouseCode();                
                String url = Constants.URL_GET_HOUSE_DETAIL + "&houseId=" + houseCode;
                String result = NetUtils.GetContentFromUrl(url);
                return result;
        } 

        @Override    
        protected void onPostExecute(String result) {
                // 返回內容
                bodyLoading.setVisibility(View.GONE);
                boolean isNetworkAvailable = mApp.isNetworkConnected();//網絡檢測
                if (!isNetworkAvailable) {
                        Toast.makeText(mContext, R.string.sys_network_error, Toast.LENGTH_SHORT).show();
                }

        }

        @Override
        protected void onPreExecute() {
                // 任務啟動loading
                bodyLoading.setVisibility(View.VISIBLE);
        }

        @Override
        protected void onProgressUpdate(Integer... values) {
                // 更新進度
        }        
}

</code></pre>


<p><strong>二、参考文章</strong></p>

<ul>
<li><a href="http://www.cnblogs.com/zhangkai281/archive/2011/07/27/2118319.html">ListView分页加载数据</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android Google Map V2开发]]></title>
    <link href="http://addcn.github.com/blog/2013/04/11/android-google-map-v2/"/>
    <updated>2013-04-11T15:28:00+08:00</updated>
    <id>http://addcn.github.com/blog/2013/04/11/android-google-map-v2</id>
    <content type="html"><![CDATA[<p>google map v2开发总结</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[漂亮的ppt分享]]></title>
    <link href="http://addcn.github.com/blog/2013/04/08/pretty-ppt-share/"/>
    <updated>2013-04-08T14:54:00+08:00</updated>
    <id>http://addcn.github.com/blog/2013/04/08/pretty-ppt-share</id>
    <content type="html"><![CDATA[<h3>1、life is a journey</h3>

<p><a href="http://t.cn/zTbCu0T" title="下载ppt"><img src="http://addcn.github.com/download/images/life-is-a-journey.png" alt="life-is-a-journey.ppt" /></a></p>

<!-- more -->


<h3>2、29 ways to stay creative</h3>

<p><a href="http://t.cn/zTbC3GH" title="下载ppt"><img src="http://addcn.github.com/download/images/29-ways-to-stay-creative.png" alt="29 ways to stay creative.ppt" /></a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[maven构建android项目]]></title>
    <link href="http://addcn.github.com/blog/2013/04/02/maven-android-eclipse/"/>
    <updated>2013-04-02T14:20:00+08:00</updated>
    <id>http://addcn.github.com/blog/2013/04/02/maven-android-eclipse</id>
    <content type="html"><![CDATA[<p>现有android项目环境</p>

<p>java安装路径：<code>C:\Program Files\Java\jdk1.6.0_24</code></p>

<p>eclipse安装路径：<code>D:\Program Files\eclipse</code></p>

<p>android sdk安装路径：<code>D:\Program Files\eclipse\sdk</code></p>

<p>下面搭建maven环境集成现有的android项目</p>

<h3>1、安装maven</h3>

<p><a href="http://ftp.tc.edu.tw/pub/Apache/maven/maven-3/3.0.4/binaries/apache-maven-3.0.4-bin.zip">http://ftp.tc.edu.tw/pub/Apache/maven/maven-3/3.0.4/binaries/apache-maven-3.0.4-bin.zip</a></p>

<p>下载解压到 <code>D:\local\maven-3.0.4</code></p>

<p>配置maven 环境变量</p>

<p>系统变量：<code>MAVEN_HOME = D:\local\maven-3.0.4</code></p>

<p>用户变量：<code>PATH = %MAVEN_HOME%\bin</code></p>

<p>验证结果：<code>mvn --version</code></p>

<!-- more -->


<p>修改maven仓库存放位置</p>

<p>文件： <code>D:\local\maven-3.0.4\conf\settings.xml</code></p>

<p>修改</p>

<pre class="terminal"><code><localRepository>/path/to/local/repo</localRepository></code></pre>


<p>为</p>

<pre class="terminal"><code><localRepository>D:\local\maven-3.0.4\repo</localRepository></code></pre>


<p>执行：</p>

<pre class="terminal"><code>mvn help:system</code></pre>


<p>打印所有的java系统属性和环境变量。如果运行的过程中没有错误，打开我们仓库（ <code>D:\local\maven-3.0.4\repo</code> ）会发现里面多了一些文件。这些文件就是我们从maven的中央仓库下载到本地仓库的。</p>

<p>maven项目初体验</p>

<p>命令行方式创建</p>

<pre class="terminal"><code>cd d:\local\maven-3.0.4
mvn archetype:create -DgroupId=com.addcn.android.maven.hello -DartifactId=hello -DpackageName=com.addcn.android.maven.hello -Dversion=1.0
</code></pre>


<p>可见<code>d:\local\maven-3.0.4\hello</code>生成测试的项目</p>

<p>编译项目代码</p>

<p>项目创建完成，把它构建成我们eclipse可以导入的项目</p>

<pre class="terminal"><code>cd d:\local\maven-3.0.4
mvn clean compile</code></pre>


<p>clean 告诉maven清理输入出目录target，compile告诉maven编译项目主代码</p>

<p>编译完后，项目的目录结构还不是我们想要的eclipse的项目结构，是不能导入到eclipse中的。执行命令可得到我们需要的项目目录：</p>

<pre class="terminal"><code>mvn eclipse:eclipse</code></pre>


<h3>2、安装maven-android-sdk-deployer</h3>

<p><a href="https://github.com/mosabua/maven-android-sdk-deployer">https://github.com/mosabua/maven-android-sdk-deployer</a></p>

<p>下载解压到 <code>D:\Program Files\eclipse\maven-android-sdk-deployer</code></p>

<p>执行以下命令，将android sdk的包放入到本地仓库</p>

<pre class="terminal"><code>cd D:\Program Files\eclipse\maven-android-sdk-deployer
mvn install -P 2.3.3
mvn install -P 4.2.2
mvn install
</code></pre>


<h3>3、安装eclipse插件</h3>

<p>eclipse菜单栏中选择Help，然后选择Install New Software&#8230;.，接着在Install对话框中店家Work with字段边上的Add按钮，得到一个新的Add Repository对话框，在Name字段中输入名称如m2e，Location字段中输入对应的地址如http://m2eclipse.sonatype.org/sites/m2e，然后点击Ok。</p>

<p>m2eclipse插件
<a href="http://m2eclipse.sonatype.org/sites/m2e">http://m2eclipse.sonatype.org/sites/m2e</a></p>

<p>m2e-extras
<a href="http://m2eclipse.sonatype.org/sites/m2e-extras/">http://m2eclipse.sonatype.org/sites/m2e-extras/</a></p>

<h3>4、修改eclipse中M2_REPO路径</h3>

<p>修改maven默认的本地库的路径<code>${user}\.m2\repository\</code>为我们自定义的<code>D:\local\maven-3.0.4\repo</code></p>

<p>（1）、增加系统变量： <code>M2_REPO = D:\local\maven-3.0.4\repo</code></p>

<p>（2）、系统变量Path增加M2_REPO路径，<code>PATH = %M2_REPO%</code></p>

<p>（3）、eclipse->preferences->maven->installations下add一个maven，如： <code>D:\local\maven-3.0.4\repo</code></p>

<p>（4）、eclipse->preferences->maven->installations下修改user setting 选项为：<code>D:\local\maven-3.0.4\repo\conf \setting.xml</code> ，并点击update settings</p>

<p>（5）、点击配置窗口的apply按钮，重启myeclipse，会发现M2_REPO变量的值变成了 <code>D:\local\maven-3.0.4\repo</code></p>

<h3>5、在已经存在的android项目根目录增加<code>pop.xml</code>文件</h3>

<p>pop.xml配置文件参考</p>

<p>（1）、 下载samples文件（<a href="https://code.google.com/p/maven-android-plugin/wiki/Samples">https://code.google.com/p/maven-android-plugin/wiki/Samples</a>），解压进入helloflashlight目录</p>

<p>（2）、github项目文件配置（<a href="https://github.com/github/android/tree/master/app">https://github.com/github/android/tree/master/app</a>）</p>

<p>（3）、eclipse新建maven项目生成的pop.xml参考（见<a href="http://blog.csdn.net/jason20ming/article/details/7031734%E5%8F%8Ahttp://www.cnblogs.com/luhouxiang/archive/2011/08/29/2158096.html">http://blog.csdn.net/jason20ming/article/details/7031734及http://www.cnblogs.com/luhouxiang/archive/2011/08/29/2158096.html</a>）</p>

<h3>6、构建测试</h3>

<pre class="terminal"><code>cd D:\mobile\android\Hello
mvn clean install

[ERROR] Failed to execute goal on project hello: Could not resolve dependencies
for project com.addcn.android.maven.hello:hello:apk:1.0.0-SNAPSHOT: Failure to f
ind com.google.android:android:jar:4.2.2 in http://repo.maven.apache.org/maven2
was cached in the local repository, resolution will not be reattempted until the
 update interval of central has elapsed or updates are forced -> [Help 1]
</code></pre>


<p>提示没有找到<code>android:jar:4.2.2</code>文件，也提示解决方法：</p>

<p><code>[ERROR] D:\Program Files\eclipse\sdk\tools\android update sdk --no-ui --obsolete --force</code></p>

<p>执行它会安装全部sdk，我们只安装需要的4.2.2版本的。</p>

<p>执行以下命令：</p>

<pre class="terminal"><code>mvn install:install-file -Dfile=d:\Progra~1\eclipse\sdk\platforms\android-4.2\android.jar -DgroupId=com.google.android -DartifactId=android -Dversion=4.2.2 -Dpackaging=jar
</code></pre>


<p>会从sdk目录下複製4.2版本的<code>android.jar</code>到仓库目录。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[octopress高级配置]]></title>
    <link href="http://addcn.github.com/blog/2013/04/01/octopress-advanced-setting/"/>
    <updated>2013-04-01T18:43:00+08:00</updated>
    <id>http://addcn.github.com/blog/2013/04/01/octopress-advanced-setting</id>
    <content type="html"><![CDATA[<p><strong>1、基本设置</strong></p>

<p>文章留言功能<br/>
<code>_config.yml</code>设置：<code>disqus_short_name:addcn #非注册帐号，注册后新建留言的帐号</code></p>

<p>最近文章列表</p>

<p>谷歌分析统计</p>

<p>github链接</p>

<p><strong>2、新浪微博侧栏</strong></p>

<p>增加文件：<code>source/_includes/asides/weibo.html</code><br/>
<code>_config.yml</code> 增加：<code>default_asides: [..., asides/weibo.html...]</code></p>

<p><strong>3、博客分类功能</strong></p>

<p><strong>4、博客标签云功能</strong></p>

<p><strong>5、新窗口打开非站内链接</strong></p>

<p><strong>6、页面返回底部功能</strong></p>

<p><strong>7、参考文章</strong></p>

<ul>
<li><a href="http://yanping.me/cn/blog/2012/01/07/theming-and-customization/">为Octopress修改主题和自定义样式</a></li>
<li><a href="http://programus.github.com/blog/2012/03/03/add-weibo-sidebar-into-octopress/">为Octopress博客追加新浪微博侧栏</a></li>
<li><a href="http://ccaloha.cc/blog/2011/10/25/xin-zeng-liu-yan-gong-neng-in-octopress/">新增留言功能in Octopress</a></li>
<li><a href="http://blog.eddie.com.tw/2011/12/05/add-catetories-to-sidebar-in-octopress/">幫你的Octopress增加文章分類</a></li>
<li><a href="http://yanping.me/cn/blog/2012/03/18/github-pages-step-by-step/">Github Pages极简教程</a></li>
<li><a href="http://codemacro.com/2012/07/18/add-tag-to-octopress/">为octopress添加tag Cloud</a></li>
<li><a href="http://blog.log4d.com/2012/05/tag-cloud/">给 Octopress 加上标签功能</a></li>
<li><a href="http://codemacro.com/2012/07/26/post-footer-plugin-for-octopress/">为octopress每篇文章添加一个文章信息</a></li>
<li><a href="http://tillage.github.io/jinja2/jinja2-template/">Jinja2 Template</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[在github搭建octopress博客]]></title>
    <link href="http://addcn.github.com/blog/2013/04/01/blog-on-github-octopress/"/>
    <updated>2013-04-01T14:19:00+08:00</updated>
    <id>http://addcn.github.com/blog/2013/04/01/blog-on-github-octopress</id>
    <content type="html"><![CDATA[<h2>一、搭建基于github的博客</h2>

<p><strong>1、注册帐号</strong><br/>
地址 <a href="https://github.com/users">https://github.com/users</a></p>

<p><strong>2、安装octopress</strong><br/>
参照官方安装指引<a href="http://octopress.org/docs/">http://octopress.org/docs/</a></p>

<pre class="terminal"><code>git clone git://github.com/imathis/octopress.git octopress
cd octopress
ruby --version  # Should report Ruby 1.9.3，我的是1.9.2不管它
gem install bundler
bundle install
rake install
</code></pre>


<p><strong>3、github新建版本库</strong></p>

<p>在github上<a href="https://github.com/new">https://github.com/new</a> 新建一个命名注意为<code>username.github.com</code>的<code>repo</code>（参考<a href="http://xuhehuan.com/783.html">http://xuhehuan.com/783.html</a>）。</p>

<pre class="terminal"><code>Repository name addcns.github.com
Description (optional)  octopress
Initialize this repository with a README
</code></pre>


<p><strong>4、写博客发布文章</strong></p>

<p><strong>本地修改预览</strong></p>

<pre class="terminal"><code>rake setup_github_pages
git@addcns.github.com:addcns/addcns.github.com #注意多帐号，使用git@addcns.github.com:addcns，而非git@github.com:addcns
rake install #安装默认主题
rake new_post["titile"] #创建文章
rake new_page[super-awesome] #创建页面
rake -T #查看rake参数
rake generate #生成静态
rake preview #本地预览
</code></pre>


<p>预览地址<a href="http://localhost:4000/">http://localhost:4000/</a></p>

<p><strong>提交发布线上</strong></p>

<pre class="terminal"><code>rake deploy #发布到master分支,访问http:/addcns.github.com
git add . #源文件发布source分支
git commit -m "init octopress"
git push origin source
</code></pre>


<p>最后访问见<a href="http://addcns.github.com">http://addcns.github.com</a></p>

<p><strong>中文乱码问题</strong></p>

<p>执行rake generate提示<code>rake generate Liquid Exception:invalid byte sequence in UTF-8 in post</code></p>

<p>为了支持中文UTF-8编码，对Windows环境变量配置如下：</p>

<pre class="terminal"><code>LANG=zh_CN.UTF-8  
LC_ALL=zh_CN.UTF-8</code></pre>


<p>也可在直接在Windows的cmd窗口下运行命令：</p>

<pre class="terminal"><code>set LANG=zh_CN.UTF-8 
set LC_ALL=zh_CN.UTF-8</code></pre>


<ul>
<li><code>_config.yml</code>另存为<code>utf-8</code>编码格式文件</li>
<li>文章<code>_post</code>使用<code>utf-8</code>编码文件</li>
</ul>


<h2>二、多个GitHub帐号的SSH key切换</h2>

<p>为了测试注册两个github帐号，<code>rake deploy</code>时候会提示输入默认的id_rsa的密钥，所以需要切换帐号。（参考<a href="http://www.zikercn.com/node/20">http://www.zikercn.com/node/20</a>）</p>

<p><strong>1、生成id_rsa_addcns（区分默认id_rsa）</strong></p>

<pre class="terminal"><code>ssh-keygen -t rsa -C "***@addcn.com"
Enter file in which to save the key (/c/Documents and Settings/10113/.ssh/id_ras):
id_rsa_addcns
Enter passphrase(empty for no passphrase):
******
ssh-agent bash #报错：Could not open a connection to your authentication agent
ssh-add id_rsa_addcns #增加id_rsa_addcns
</code></pre>


<p><strong>2、修改.ssh/id_rsa/config文件（无直接新建立）</strong></p>

<pre class="terminal"><code># Default github user(***@gmail.com)
Host github.com
HostName github.com
User git
IdentityFile /c/Docume~1/10113/.ssh/id_rsa
 
# second user(***@addcn.com)
Host addcns.github.com
HostName github.com
User git
IdentityFile /c/Docume~1/10113/.ssh/id_rsa_addcns
</code></pre>


<p><strong>3、增加ssh key</strong></p>

<p>登录github（<a href="https://github.com/settings/ssh">https://github.com/settings/ssh</a>），左边面板选择ssh，然后把上步生成的<code>.ssh/id_rsa_addcns.pub</code>用记事本打开，复制里面的内容到Key表单。</p>

<p><strong>4、增加用户</strong></p>

<pre class="terminal"><code>git config --list
git config --global user.name "addcns"
git config --global user.email ***@addcns.com
</code></pre>


<p><strong>5、验证github是否正确</strong></p>

<pre class="terminal"><code>ssh -T git@github.com
</code></pre>


<p>没有错误可以看到提示的：<code>Hi,addcns! You've successfully authenticated...</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[octopress自定义主题]]></title>
    <link href="http://addcn.github.com/blog/2013/04/01/octopress-custom-theme/"/>
    <updated>2013-04-01T11:16:00+08:00</updated>
    <id>http://addcn.github.com/blog/2013/04/01/octopress-custom-theme</id>
    <content type="html"><![CDATA[<p>终于把octopress完整的修改了一下，记录下步骤：</p>

<p><strong>1、新增主题<code>simple</code></strong></p>

<p>以默认classic主题，新建自定义主题，复制<code>.themes/classic</code>到<code>.themes/simple</code>。</p>

<p>执行以下命令：</p>

<pre class="terminal"><code>rake install[simple] #安装主题
rake clean
rake update_style[simple] #更新sass，会把旧的sass重命名为sass.old
rake update_source[simple] #更新source，会把旧的source重命名为source.old
rake generate
rake preview #预览，
rake deploy
</code></pre>


<p><code>rake preview</code>启动预览后，修改<code>source</code>或<code>sass</code>下的文件后可不用重新启动，其会<strong>实时刷新</strong>。</p>

<p><strong>注意：</strong>调试修改过程会直接修改<code>source</code>或<code>sass</code>文件，完成后必须记得把修改内容拷贝到<code>.themes/simple</code>，否则<code>rake update_source[simple]</code>会直接覆盖掉修改过的文件。</p>

<p><strong>2、修改布局文件<code>source</code></strong></p>

<p>主人口文件<code>source/_layouts/default.html</code></p>

<p><strong>3、修改样式文件<code>sass</code></strong></p>

<p>可直接修改<code>sass/custom/_styles.scss</code>，该样式文件页面<strong>最后加载</strong>的css，里面定义的样式会覆盖其它。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[月份总结201209]]></title>
    <link href="http://addcn.github.com/blog/2013/01/06/month-summary/"/>
    <updated>2013-01-06T14:54:00+08:00</updated>
    <id>http://addcn.github.com/blog/2013/01/06/month-summary</id>
    <content type="html"><![CDATA[<p>在新浪微薄上评论读书的话题，@萧秋水回复说“最高的记录是1个月60本”，才感到自己的努力还远远不够。最可怕的事情就是，比你条件好的人，比你还要努力。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[常用网址]]></title>
    <link href="http://addcn.github.com/blog/2012/12/08/develop-tool-link/"/>
    <updated>2012-12-08T20:20:00+08:00</updated>
    <id>http://addcn.github.com/blog/2012/12/08/develop-tool-link</id>
    <content type="html"><![CDATA[<h3>&#8211;技术&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8211;</h3>

<p>前端导航@前端 <a href="http://www.ux265.net">http://www.ux265.net</a></p>

<p>蓝色理想@开发 <a href="http://www.blueidea.com">http://www.blueidea.com</a></p>

<p>phpchina@开发 <a href="http://bbs.phpchina.com">http://bbs.phpchina.com</a></p>

<p>iphone@开发 <a href="http://www.cocoachina.com">http://www.cocoachina.com</a></p>

<p>devdiv@开发 <a href="http://www.devdiv.com/android_-forum-102-1.html">http://www.devdiv.com</a></p>

<p>apkbus@开发 <a href="http://www.apkbus.com/forum.php">http://www.apkbus.com</a></p>

<p>开源中国@开发 <a href="http://www.oschina.net/android">http://www.oschina.net</a></p>

<p>eoeandroid@开发 <a href="http://www.eoeandroid.com/forum.php">http://www.eoeandroid.com</a></p>

<!-- more -->


<h3>&#8211;社区&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8211;</h3>

<p>doit@效率 <a href="https://i.doit.im/home">https://i.doit.im/home</a></p>

<p>evernote@效率 <a href="https://www.evernote.com">https://www.evernote.com</a></p>

<p>豆瓣@addcn <a href="http://www.douban.com">http://www.douban.com</a></p>

<p>twitter@addcn <a href="http://twitter.com/addcn">http://twitter.com/addcn</a></p>

<p>新浪微博@addcn <a href="http://weibo.com/addcn">http://weibo.com/addcn</a></p>

<p>blogbus@addcn <a href="http://addcn.blogbus.com">http://addcn.blogbus.com</a></p>

<p>baidu@addcn <a href="http://hi.baidu.com/new/addcn">http://hi.baidu.com/new/addcn</a></p>

<h3>&#8211;在线&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8211;</h3>

<p>抓虾@RSS <a href="http://www.zhuaxia.com">http://www.zhuaxia.com</a></p>

<p>鲜果@RSS <a href="http://www.xianguo.com">http://www.xianguo.com</a></p>

<p>google@RSS <a href="http://www.google.com/reader">http://www.google.com/reader</a></p>

<p>卓越@购物 <a href="http://www.amazon.cn">http://www.amazon.cn</a></p>

<p>京东@购物 <a href="http://www.360buy.com">http://www.360buy.com</a></p>

<p>当当网@购物 <a href="http://home.dangdang.com">http://home.dangdang.com</a></p>

<p>互动出版社@购物 <a href="http://www.china-pub.com">http://www.china-pub.com</a></p>

<h3>&#8211;工具&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8211;</h3>

<p>微盘@云存储 <a href="http://vdisk.weibo.com">http://vdisk.weibo.com</a></p>

<p>云端硬盘@云存储 <a href="https://drive.google.com">https://drive.google.com</a></p>

<p>百度文库@云存储 <a href="http://wenku.baidu.com">http://wenku.baidu.com</a></p>

<p>新浪爱问@云存储 <a href="http://ishare.iask.sina.com.cn">http://ishare.iask.sina.com.cn</a></p>

<p>slideshare@云存储 <a href="http://www.slideshare.net/addcn">http://www.slideshare.net/addcn</a></p>

<p>花瓣@图片分享 <a href="http://huaban.com">http://huaban.com</a></p>

<p>flickr@图片分享 <a href="http://www.flickr.com">http://www.flickr.com</a></p>

<p>图研所@信息图 <a href="http://www.tuyansuo.com">http://www.tuyansuo.com</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[占用五分钟受益一辈子]]></title>
    <link href="http://addcn.github.com/blog/2012/04/07/five-minute-reading/"/>
    <updated>2012-04-07T14:54:00+08:00</updated>
    <id>http://addcn.github.com/blog/2012/04/07/five-minute-reading</id>
    <content type="html"><![CDATA[<h3>一）成长的寓言：做一棵永远成长的苹果树</h3>

<p>一棵苹果树，终于结果了。</p>

<p>第一年，它结了10个苹果，9个被拿走，自己得到1个。对此，苹果树愤愤不平，于是自断经脉，拒绝成长。第二年，它结了5个苹果，4个被拿走，自己得到1个。“哈哈，去年我得到了10％，今年得到20％！翻了一番。”这棵苹果树心理平衡了。</p>

<p>但是，它还可以这样：继续成长。譬如，第二年，它结了100个果子，被拿走90个，自己得到10个。</p>

<p>很可能，它被拿走99个，自己得到1个。但没关系，它还可以继续成长，第三年结1000个果子……</p>

<p>其实，得到多少果子不是最重要的。最重要的是，苹果树在成长！等苹果树长成参天大树的时候，那些曾阻碍它成长的力量都会微弱到可以忽略。真的，不要太在乎果子，成长是最重要的。</p>

<!-- more -->


<p><strong>【心理点评】</strong></p>

<p>你是不是一个已自断经脉的打工族？</p>

<p>刚开始工作的时候，你才华横溢，意气风发，相信“天生我才必有用”。但现实很快敲了你几个闷棍，或许，你为单位做了大贡献没人重视；或许，只得到口头重视但却得不到实惠；或许……总之，你觉得就像那棵苹果树，结出的果子自己只享受到了很小一部分，与你的期望相差甚远。</p>

<p>于是，你愤怒、你懊恼、你牢骚满腹……最终，你决定不再那么努力，让自己的所做去匹配自己的所得。几年过去后，你一反省，发现现在的你，已经没有刚工作时的激情和才华了。</p>

<p>“老了，成熟了。”我们习惯这样自嘲。但实质是，你已停止成长了。</p>

<p>这样的故事，在我们身边比比皆是。</p>

<p>之所以犯这种错误，是因为我们忘记生命是一个历程，是一个整体，我们觉得自己已经成长过了，现在是到该结果子的时候了。我们太过于在乎一时的得失，而忘记了成长才是最重要的。</p>

<p>好在，这不是金庸小说里的自断经脉。我们随时可以放弃这样做，继续走向成长之路。</p>

<p>切记：如果你是一个打工族，遇到了不懂管理、野蛮管理或错误管理的上司或企业文化，那么，提醒自己一下，千万不要因为激愤和满腹牢骚而自断经脉。不论遇到什么事情，都要做一棵永远成长的苹果树，因为你的成长永远比每个月拿多少钱重要。</p>

<p>转载自：<a href="http://www.bwqcw.cn/blog/?p=2182">http://www.bwqcw.cn/blog/?p=2182</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Jekyll在Github上中文问题]]></title>
    <link href="http://addcn.github.com/blog/2012/03/16/jekyll-chinese-on-github/"/>
    <updated>2012-03-16T18:43:00+08:00</updated>
    <id>http://addcn.github.com/blog/2012/03/16/jekyll-chinese-on-github</id>
    <content type="html"><![CDATA[<p>配置好环境后找到一个非常<a href="http://tom.preston-werner.com/">简洁的模板</a>，下载回来提示错误：</p>

<pre class="terminal"><code>D:\htdocs\addcn.github.com\blog.uedao.com>jekyll --server
Configuration from D:/htdocs/addcn.github.com/blog.uedao.com/_config.yml
Building site: D:/htdocs/addcn.github.com/blog.uedao.com -> D:/htdocs/addcn.gith
ub.com/blog.uedao.com/_site
C:/Ruby192/lib/ruby/gems/1.9.1/gems/jekyll-0.11.2/lib/jekyll/convertible.rb:30:i
n `read_yaml': invalid byte sequence in GB2312 (ArgumentError)
        from C:/Ruby192/lib/ruby/gems/1.9.1/gems/jekyll-0.11.2/lib/jekyll/post.r
b:39:in `initialize'
......
</code></pre>


<p><strong>解决方法：</strong>
找文件C:\Ruby192\lib\ruby\gems\1.9.1\gems\jekyll-0.11.2\lib\jekyll\convertible.rb，查找self.content = File.read(File.join(base, name))替换为下面两行即可。</p>

<pre class="terminal"><code>#self.content = File.read(File.join(base, name))
self.content = File.read(File.join(base, name), :encoding => "utf-8")
</code></pre>


<p><strong>参考资料：</strong><br/>
- <a href="http://vlucas.net/essay/2012/02/19/jekyll-y/">http://vlucas.net/essay/2012/02/19/jekyll-y/</a><br/>
- <a href="http://roylez.heroku.com/2010/02/04/jekyll-on-heroku.html">http://roylez.heroku.com/2010/02/04/jekyll-on-heroku.html</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[使用Jekyll在Github上搭建博客]]></title>
    <link href="http://addcn.github.com/blog/2012/03/15/use-jekyll-build-blog-on-github/"/>
    <updated>2012-03-15T18:43:00+08:00</updated>
    <id>http://addcn.github.com/blog/2012/03/15/use-jekyll-build-blog-on-github</id>
    <content type="html"><![CDATA[<p>Jekyll是一个使用Ruby编写的静态站点生成工具，使用Liquid模板渲染引擎，支持Markdown和Textile标记语言，并且可以为所有以 .html、.markdown、.textile扩展名结尾的文件使用YAML配置，内置语法高亮功能。而Github的Pages服务可以为每个Github主机上的仓库提供静态页面服务，并且Pages服务支持Jekyll。因为Github Pages有两种Pages，分别是用户页面和项目页面，所以我们可以使用用户页面来创建自己的Blog。</p>

<p>在开始前，请确保你已经有了Github账号一枚和Git的正确配置。没有的朋友可以先移步<a href="https://github.com/plans">Github注册</a>并<a href="http://help.github.com/win-set-up-git/">安装配置Git</a>。</p>

<p>首先，创建你的 Blog 仓库 username(请确保跟你的账号名相同).github.com:</p>

<pre class="terminal"><code>$ mkdir username.github.com
$ cd username.github.com</code></pre>


<p>新建一个 index.html 文件，像下面这样:</p>

<div>
  <pre><code class='html'>&lt;!doctype html&gt;
&lt;html&gt;
&lt;head&gt;
&lt;title&gt;Hello&lt;/title&gt;
&lt;/head&gt;

&lt;body&gt;
&lt;h1&gt;Hello!&lt;/h1&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre>
</div>


<p>初始化仓库、提交并push到Github:</p>

<pre class="terminal"><code>$ git init
$ git add .
$ git commit -a -m 'init commit.'
$ git remote add origin
$ git push origin master
</code></pre>


<blockquote><p>现在你打开 username.github.com 就可以看到刚才新建的页面了，就是这么简单。当然也可以为你的Blog仓库绑定独立域名，具体做法就是：</p></blockquote>

<ol>
<li>在你的仓库中新建内容为 www.youdomain.com 的 CNAME 文件；</li>
<li>在你的域名管理页或者是DNS解析的地方，增加一个记录，记录类别为CNAME(Alias)类型.</li>
</ol>


<p class="note">*Note：如果你在CNAME中填写的是顶级域名，就得设置DNS的记录类别为A(Host)型，并设置主机为207.97.227.245。详细介绍请移步Github的<a href="http://pages.github.com">Pages</a>页面。</p>


<p>接下来我们只需要按照自己的喜好设计页面。首先认识下Jekyll的文件及目录配置:</p>

<pre class="terminal">
  .
  |-- _includes
  |-- _plugins 
  |-- _layout 
  |   |-- default.html
  |   `-- post.html
  |-- _post
  |   |-- yyyy-mm-dd-title.markdown
  |   `-- yyyy-mm-dd-title.markdown
  |-- _site
  |-- _config.yml
  `-- index.html
</pre>


<h2>_includes</h2>

<p>存放你需要在模板文件中包含的文件，你可以使用Liquid标签 <code>{&permil; include file.ext &permil;}</code> 来引用相应的文件。</p>

<h2>_plugins</h2>

<p>可以增加你自己的插件</p>

<h2>_layout</h2>

<p>存放布局模板，请参考<a href="https://github.com/taberhuang/taberhuang.github.com/tree/master/_layouts">https://github.com/taberhuang/taberhuang.github.com/tree/master/_layouts</a></p>

<h2>_post</h2>

<p>存放文章列表，文件命名一定要遵循 yyyy-mm-dd-title.html|markdown|textile 规则，请参考<a href="https://github.com/taberhuang/taberhuang.github.com/tree/master/_posts">https://github.com/taberhuang/taberhuang.github.com/tree/master/_posts</a></p>

<h2>_site</h2>

<p>Jekyll自动生成的，所以可以忽略，如果你有在本地安装Jekyll并预览了的话，可以使用.gitignore设置Git停止对本目录的跟踪。</p>

<h2>_config.yml</h2>

<p>设置经常使用的配置选项，这样在本地启动预览时就不用每次都手动输入了。</p>

<h2>index.html 和所有的 HTML/Markdown/Textile 文件</h2>

<p>所有的HTML/Markdown/Textile文件都可以包含 YAML 配置，这类文件都会被Jekyll解析。</p>

<p>现在你可以在自己的仓库中配置好你自己的目录及文件，也可以clone我的仓库，然后修改。</p>

<pre class="terminal">
<code>$ git clone https://github.com/taberhuang/taberhuang.github.com.git</code>
</pre>


<p>修改完后就可以push你的代码到Github上，看到结果了。刚才有说到本地预览，如果你想在本地预览后，确保没错误再push的话，就需要在本地安装Jekyll，下面介绍下Jekyll的安装方法。</p>

<p>一、安装Ruby运行环境和RubyGem:Windows用户只要下载 <a href="http://rubyforge.org/frs/download.php/74298/rubyinstaller-1.9.2-p180.exe" title="点击下载">RubyInstaller</a>。下载安装后请手动升级gem.</p>

<pre class="terminal"><code>$ gem update --system</code></pre>


<p>二、安装DevKit。DevKit是windows平台编译和使用本地C/C++扩展包工具。用来模拟Linux平台下的 <code>make,gcc,sh</code> 进行编译。下载文件后，解压到 `C:\DevKit&#8217;，再通过命令行安装:</p>

<pre class="terminal">
<code>$ cd C:\DevKit
$ ruby dk.rb init
$ ruby dk.rb install</code>
</pre>


<p>三、安装并检查刚才的DevKit安装是否成功。如果成功安装，则DevKit也就安装成功，如果不成功，请重新安装DevKit。</p>

<pre class="terminal">
<code>$ gem install jekyll</code>
</pre>


<p>四、安装Rdiscount，这个是用来解析Markdown标记的解析包。如果你使用Textile的话，就是安装Kramdown。</p>

<pre class="terminal">
<code>$ gem install rdiscount</code>
</pre>


<p>所有的环境和依赖包都安装成功后，进入你的仓库目录，用下面的命令便可启动Jekyll，并在本地预览了，预览地址默认为 <code>127.0.0.1:4000</code>，当然你也可以通过 _config.yml 配置:</p>

<pre class="terminal">
<code>jekyll --server</code>
</pre>


<p>参考资料：</p>

<ul>
<li><a href="http://pages.github.com/">http://pages.github.com/</a></li>
<li><a href="https://github.com/mojombo/jekyll/wiki">https://github.com/mojombo/jekyll/wiki</a></li>
<li><a href="http://blog.envylabs.com/2009/08/publishing-a-blog-with-github-pages-and-jekyll/">http://blog.envylabs.com/2009/08/publishing-a-blog-with-github-pages-and-jekyll/</a></li>
<li><a href="http://daringfireball.net/projects/markdown/syntax">http://daringfireball.net/projects/markdown/syntax</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[图片缩略图动态生成]]></title>
    <link href="http://addcn.github.com/blog/2011/08/23/nginx-dynamic-thumb/"/>
    <updated>2011-08-23T18:43:00+08:00</updated>
    <id>http://addcn.github.com/blog/2011/08/23/nginx-dynamic-thumb</id>
    <content type="html"><![CDATA[<p>旧博文备份<a href="http://blog.uedao.com/blog/?p=85">http://blog.uedao.com/blog/?p=85</a></p>

<p>整理下网站缩略图水印图动态生成的方法：</p>

<p>会员上传图片后，调用图片的各地方需要的尺寸不全一样，需要生成大小不同的等比例缩略图。
实现方法是nginx判断，请求的缩略图规则url中，如果图片不存在则调用php程序以原始图片生成对应的缩略图，然后显示出来，并且图片第一次生成后下次直接调用即可。</p>

<p>一、基本原则：
只保留原始图片，其它尺寸由原图生成。
缩略图按需生成，大小体现在固定的url。</p>

<p>二、图片文件：
原始图路径：/home/htdocs/app/upfiles/house/年/月/日/src<em>图片名
生成图路径：/home/htdocs/app/upfiles/house/active/年/月/日/图片名</em>图片生成大小
生成图路径：/home/htdocs/app/upfiles/house/active/年/月/日/图片名_图片生成大小及会员编号
原始图url：</p>

<p>http://p2.uedao.com/house/2011/02/12/src_130037359579225801.jpg</p>

<p>缩略图url（不存在则自动生成）：</p>

<p>http://p1.uedao.com/house/active/2011/02/12/130037359579225801_128x92.jpg</p>

<p>水印图url（不存在则自动生成）：</p>

<p>http://p1.uedao.com/house/active/2011/02/12/130037359579225801_128x92x1001.jpg</p>

<p>三、nginx配置（nginx.conf）</p>

<pre class="terminal"><code>#p1.uedao.com p2.uedao.com
server {
    # listen port
    listen       80;
    server_name  p1.uedao.com p2.uedao.com;
    charset utf-8;

    # root
    root   /home/htdocs/app/upfiles;
    index  index.php index.html;

    # blocked
    location ~ .*\.(gif|jpg|png|jpeg|bmp|swf|cur|ico)$ {
        valid_referers none blocked *.uedao.com *.facebook.com;
        if ($invalid_referer) {
           #return 404;
        }
        location ~* /house/active/(.+)$ {
            if (!-f $request_filename) {
                proxy_pass http://localhost:8000/app/action/createimg.php?s=$1&amp;$args;
                break;
            }
        }
        expires max;
        access_log off;
    }
}
#注：$1,为location匹配的正则结果；$args, 请求中的参数。
</code></pre>


<p>四、php程序（createimg.php）</p>

<pre class="terminal"><code>$src = $GET ['s']; //图片路径
if ($src) {
    //省略数据验证（如请求来源判断、只响应指定尺寸等）
    $src_array = explode ( '/', $src );
    $src_array_len = count ( $src_array );
    $file_path = $src_array [0] . '/' . $src_array [1] . '/' . $src_array [2] . '/';
    $file_name = $src_array [3];
    //生成大小
    $size_ext_str = strrchr ( trim ( $file_name ), '_' );
    $size_str = substr ( str_replace ( strrchr ( $size_ext_str, '.' ), '', $size_ext_str ), 1 );
    $size_array = explode ( 'x', $size_str );

    $des_file_name = getSourceImgSrc ( $file_path, $file_name ); //会员原始图片
    if (! file_exists ( $des_file_name )) {
        $width = $size_array [0];
        $heigh = $size_array [1];
        $src_file_name = getDestImgSrc ( $file_path, $file_name ); //生成目标图片
        $obj_image = new Tool_Image ();
        if (2 == count ( $size_array )) {
            //生成缩略图
            $result = $obj_image->make_thumb ( $src_file_name, $width, $heigh, $des_file_name );
        } else if (3 == count ( $size_array ) &amp;&amp; 0 != intval ( $size_array [2] )) {
            //生成水印图
            $user_id = $size_array [2];
            $water_img = FILE_PATH . 'images/index/public/global/logo.png';
            $result = $obj_image->make_watermark ( $src_file_name, $width, $heigh, $des_file_name, $water_img, $user_id );
        }
    }
    loadImgFile ( $des_file_name ); //读取图片并显示
}
//更快的读取图片并显示
function loadImgFile($file_name) {
    $fp = fopen ( $file_name, 'r' );
    header ( "Content-type:image/jpeg" );
    fpassthru ( $fp );
    return true;
}
</code></pre>


<p>注：生成缩略图后需要程序读取显示出来。</p>

<p>五、相关文章
如果你感兴趣阅读到此，下面的文章你可能也想看。
Nginx做动态生成缩略图</p>

<p>http://cnctblog.com/?p=633</p>

<p>Abusing Amazon images</p>

<p>http://aaugh.com/imageabuse.html</p>

<p>基于MongoDB GridFS的图片存储</p>

<p>http://liut.cc/blog/2010/12/about-imsto_my-first-open-source-project.html</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[mysql视图表创建与修改]]></title>
    <link href="http://addcn.github.com/blog/2011/07/08/mysql-view-action/"/>
    <updated>2011-07-08T18:43:00+08:00</updated>
    <id>http://addcn.github.com/blog/2011/07/08/mysql-view-action</id>
    <content type="html"><![CDATA[<p>旧博文备份<a href="http://blog.uedao.com/blog/?p=20">http://blog.uedao.com/blog/?p=20</a></p>

<p><strong>1、创建</strong></p>

<pre class="terminal"><code>CREATE&nbsp;[OR REPLACE] [&lt;algorithm attributes&gt;] VIEW [database.]&lt; name&gt; [(&lt;columns&gt;)]<br />
AS&nbsp;&lt;SELECT&nbsp;statement&gt;&nbsp;[&lt;check options&gt;]
</code></pre>


<p>例子：</p>

<pre class="terminal"><code>CREATE VIEW `view_articles`
AS
SELECT
    a.id AS id,
    a.title AS title,
    a.content AS content,
    t.name AS tagname,
    u.firstname AS "username"
FROM `articles` a
    LEFT JOIN `tags` t
        ON a.tag_id = t.id
    LEFT JOIN `users` u
        ON a.user_id = u.id
ORDER BY a.posttime DESC;
</code></pre>


<p><strong>2、修改</strong></p>

<pre class="terminal"><code>ALTER&nbsp;[&lt;algorithm attributes&gt;] VIEW [&lt;database&gt;.]&lt; name&gt; [(&lt;columns&gt;)]<br />
AS&lt;SELECT&nbsp;statement&gt;&nbsp;[&lt;check options&gt;]
</code></pre>


<p>例子：</p>

<pre class="terminal"><code>ALTER VIEW `view_articles`
AS
SELECT
    a.id AS id,
    a.title AS title,
    a.content AS content,
    a.posttime AS posttime,
    t.name AS tagname,
    CONCAT(u.firstname,' ',u.lastname) AS "username"
FROM `articles` a
    LEFT JOIN `tags` t
        ON a.tag_id = t.id
    LEFT JOIN `users` u
        ON a.user_id = u.id
ORDER BY a.posttime DESC;
</code></pre>


<p>修改已经建立好的视图表，最简单的方法就是在phpMyAdmin导出视图表的SQL，然后修改开头的“CREATE”（后面的</p>

<pre class="terminal"><code>ALGORITHM=UNDEFINED DEFINER=`root`@`localhost`&nbsp;SQL SECURITY DEFINER</code></pre>


<p>等不用管，保留它）为<code>ALTER</code>，运行语句即可。</p>

<p><strong>参考文章：</strong></p>

<p><a href="http://database.51cto.com/art/201005/200526.htm">http://database.51cto.com/art/201005/200526.htm</a>
<a href="http://www.sqlinfo.net/mysql/mysql_VIEWS_the_basics.php">http://www.sqlinfo.net/mysql/mysql_VIEWS_the_basics.php</a>
<a href="http://www.java2s.com/Tutorial/MySQL/0180__View/Catalog0180__View.htm">http://www.java2s.com/Tutorial/MySQL/0180<strong>View/Catalog0180</strong>View.htm</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[mysql经常使用的10个技巧]]></title>
    <link href="http://addcn.github.com/blog/2011/06/29/ten-mysql-tips/"/>
    <updated>2011-06-29T18:43:00+08:00</updated>
    <id>http://addcn.github.com/blog/2011/06/29/ten-mysql-tips</id>
    <content type="html"><![CDATA[<p>旧博文备份<a href="http://blog.uedao.com/blog/?p=5">http://blog.uedao.com/blog/?p=5</a></p>

<p><strong>1、shell执行sql语句</strong></p>

<pre class="terminal"><code>/usr/local/mysql/bin/mysql -h192.168.1.36 -uaddcn -p'password' -e "use  dev; SELECT * FROM config LIMIT 0,10;"
</code></pre>


<p><strong>2、查看执行线程</strong></p>

<pre class="terminal"><code>/usr/local/mysql/bin/mysqladmin -uaddcn -p'password'  pr
/usr/local/mysql/bin/mysqladmin -uaddcn -p'password' processlist | wc -l  #连接数
</code></pre>


<p><strong>3、kill锁表线程</strong></p>

<pre class="terminal"><code>/usr/local/mysql/bin/mysql -h192.168.1.36 -uaddcn -p'password'
mysql> show processlist;
mysql> kill 102609;
</code></pre>


<p><strong>4、主从同步</strong></p>

<p>从机执行</p>

<pre class="terminal"><code>
/usr/local/mysql/bin/mysql -h192.168.1.36 -uaddcn -p'password'
mysql> show slave status\G;
mysql> stop slave;
mysql> start slave;
</code></pre>


<p><strong>5、数据库备份还原</strong></p>

<p>备份</p>

<pre class="terminal"><code>/usr/local/mysql/bin/mysqldump -h192.168.1.36 -uaddcn -p'password' --opt  dev article > /home/addcn/backup/sql/dev_article_20110625.sql;
/usr/local/mysql/bin/mysqldump -h192.168.1.36 -uaddcn -p'password' --opt  -l --default-character-set=latin1 --skip-set-charset dev >  /home/addcn/backup/sql/dev_`date +%d`.sql;
/usr/local/mysql/bin/mysqldump -h192.168.1.36 -uaddcn -p'password' --opt  -l --default-character-set=latin1 --skip-set-charset dev article >  /home/addcn/backup/sql/dev_article_`date +%d`.sql;
</code></pre>


<p>还原</p>

<pre class="terminal"><code>/usr/local/mysql/bin/mysql -h192.168.1.36 -uaddcn -p'password'
mysql> show databases;
mysql> create database dev;
mysql> drop database dev;
mysql> use dev;
mysql> SET NAMES utf8;
mysql> source /home/addcn/backup/sql/dev_article_20110625.sql;
</code></pre>


<p><strong>6、用户管理</strong></p>

<pre class="terminal"><code>GRANT ALL PRIVILEGES ON *.* TO 'addcn'@'localhost' IDENTIFIED BY  'password' WITH GRANT OPTION;
GRANT ALL PRIVILEGES ON dev.* TO 'addcn'@'%' IDENTIFIED BY 'password'  WITH GRANT OPTION;
SET PASSWORD FOR 'addcn'@'localhost' = password('password');
SET PASSWORD FOR 'addcn'@'%' = password('password');
FLUSH PRIVILEGES;
</code></pre>


<p><strong>7、sql复制记录</strong></p>

<pre class="terminal"><code>INSERT INTO `table` SELECT * FROM `table1` WHERE id=1; #无主键
INSERT INTO `table`(`a`,`b`,`c`) SELECT `a`,`b`,`c` FROM `table1` WHERE  id=1 AND posttime<=UNIX_TIMESTAMP('2001-03-26 00:00:00'); #有主键写列
</code></pre>


<p><strong>8、根据两关联表更新其中一表某字段</strong></p>

<pre class="terminal"><code>UPDATE `table` SET a = !a WHERE id = 1; #布尔值取反
UPDATE `table1`,`table2` SET `table1`.id = `table2`.id WHERE  `table1`.id=`table2`.id; #更新
</code></pre>


<p><strong>9、if函数</strong></p>

<pre class="terminal"><code>UPDATE `users` SET money=IF(money>=$monty,money-{$monty},money) WHERE user_id=1001;
</code></pre>


<p>扣费结合 if(mysql_affected_rows()) do_success_action(); 可防止INT字段超最大值而变很大数</p>

<p><strong>10、其它</strong></p>

<pre class="terminal"><code>EXPLAIN SELECT * FROM `article` FORCE INDEX (user_id) WHERE 1; #分析语句
SELECT * FROM `article` FORCE INDEX (user_id) WHERE 1; #强制索引
UPDATE LOW_PRIORITY `article` SET browsenum=browsenum+1 WHERE id='1001'; #滞后更新
</code></pre>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Windows下搭建Android开发环境]]></title>
    <link href="http://addcn.github.com/blog/2011/04/15/windows-android-how-to/"/>
    <updated>2011-04-15T18:43:00+08:00</updated>
    <id>http://addcn.github.com/blog/2011/04/15/windows-android-how-to</id>
    <content type="html"><![CDATA[<p>旧博文备份<a href="http://addcn.blogbus.com/logs/119738531.html">http://addcn.blogbus.com/logs/119738531.html</a></p>

<p><strong>一、安装</strong></p>

<p><strong>1、jdk（非jre）下载</strong></p>

<p><a href="http://java.sun.com/javase/downloads/index.jsp">http://java.sun.com/javase/downloads/index.jsp</a></p>

<p>默认安装在<code>C:\Program Files\Java\jdk1.6.0_24</code></p>

<p><strong>2、eclipse下载</strong></p>

<p>（1）<a href="http://www.oyksoft.com/soft/1250.html">http://www.oyksoft.com/soft/1250.html</a></p>

<p>下载解压在<code>D:\Program Files\eclipse</code></p>

<p>（2）添加环境变量</p>

<p>JAVA_HOME <code>C:\Program Files\Java\jdk1.6.0_24</code></p>

<p>CLASSPATH <code>.;%JAVA_HOME%\lib;%JAVA_HOME%\lib\tools.jar</code></p>

<p>PATH <code>%JAVA_HOME%\bin;%JAVA_HOME%\jre\bin;D:\Program Files\Android\android-sdk-windows\tools</code></p>

<p><strong>3、Android SDK</strong></p>

<p><a href="http://dl.google.com/android/android-sdk_r08-windows.zip">http://dl.google.com/android/android-sdk_r08-windows.zip</a></p>

<p>解压在<code>D:\Program Files\Android\android-sdk-windows</code></p>

<p>（1）安装android开发插件(ADT)</p>

<p>help->Install New SoftWare
Add
Name:Android
Location:https://dl-ssl.google.com/android/eclipse/</p>

<p>点击Yes按钮，最后重启Eclipse</p>

<p>（2）配置Android SDK</p>

<p>点击菜单window->preferences</p>

<p>选择android SDK解压后的目录</p>

<p>我这里只选了SDK 2.1 和samples for api 7 , 自己可以任意自定义，确定后，选择install按钮</p>

<p>（3）新建AVD(android vitural device)</p>

<p>android sdk and avd manager,选中Vitural Devices 在点击New按钮</p>

<p>AVD2.2</p>

<p>（4）HelloAndroid项目</p>

<pre class="terminal"><code>HelloAndroid
com.helloandroid
HelloAndroid
8
Run as -> Run Configuration 选择AVD2.2
</code></pre>


<p><strong>二、参考文章</strong></p>

<p>jdk环境变量配置</p>

<ul>
<li><a href="http://www.cnblogs.com/nicholas_f/articles/1494073.html">http://www.cnblogs.com/nicholas_f/articles/1494073.html</a></li>
</ul>


<p>Android开发环境搭建</p>

<ul>
<li><a href="http://yidingdian.com/?p=13">http://yidingdian.com/?p=13</a></li>
<li><a href="http://mobile.51cto.com/android-227548.htm">http://mobile.51cto.com/android-227548.htm</a></li>
<li><a href="http://www.cnblogs.com/Jackeyzhang/archive/2010/04/02/1703068.html">http://www.cnblogs.com/Jackeyzhang/archive/2010/04/02/1703068.html</a></li>
</ul>

]]></content>
  </entry>
  
</feed>
